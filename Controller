create folder app ->controller->StoreController.py and __init__.py file should be present in every pyhton package 

StoreController.py

import json
import socket
from flask import Blueprint, jsonify, request, make_response, Response, abort, current_app
from urlparse import urlparse
from datetime import datetime, timedelta
from functools import wraps
from decimal import Decimal
from app.dao.StoreDAO import StoreDAO

StoreController = Blueprint("AllController", __name__)

@StoreController.route("/health", methods=['GET'])
def healthCheck():
    try:
        return 'All Controller is up..'
    except Exception, args:
        print args
        return 'All Controller is down..'


@StoreController.route("/storetabs", methods=['GET'])
def getStoretabs():
    print 'In getStoretabs'
    output = []
    try:
        storeDAO = StoreDAO()
        output = storeDAO.getStoretabs()
        print output
        jsonData = json.dumps({'appsdata': output}, default=defaultencode)
        output = Response(jsonData, status=200, mimetype='application/json')
    except Exception, args:
        print args
        response = {"error": str(args)}
        output = make_response(jsonify(response), 500)
    finally:
        print 'Returning response..'
        return output




Another example for Controller which calls service

import os

from flask import Blueprint, jsonify, request, make_response, Response, send_from_directory
import json
from app.util.ResponseData import gzipped
from app.services.MarsService import MarsService
from config import config

MarsController = Blueprint("MarsController", __name__)

@MarsController.route("/", methods=['GET'])
def healthcheck():
    return "Working"


@MarsController.route("/getBusiness", methods=['GET'])
def getBusinessList():
    output = []
    try:
        marsservice = MarsService()
        result = marsservice.getBusinessList()
        output = Response(json.dumps(result), status=200, mimetype='application/json')
    except Exception, args:
        print args
        response = {"error": str(args)}
        output = make_response(jsonify(response), 500)
    finally:
        # Return response
        return output


@MarsController.route("/quarterData", methods=['POST'])
# @gzipped
def  fill_Quarter_data():
    output = []
    try:
        inputs = request.json
        selectedCurrency=inputs['selected_currency']
        marsservice =MarsService()
        result= marsservice.selectQuarterNamesByCurrency(selectedCurrency)
        output = Response(json.dumps(result), status=200, mimetype='application/json')
    except Exception, args:
        print args
        response = {"error": str(args)}
        output = make_response(jsonify(response), 500)
    finally:
        # Return response
        return output
